

# ===============================================================================================
# Direct connection to Splunk via HEC
# ===============================================================================================

# ===============================================================================================
# Be sure to adjust batch paramaters below to suit scale/environment
# Set workers to the number of indexers or HWF HEC endpoints
# If validated certs are used, uncomment relevant lines in the tls() block below
# and change peer-verify() to "yes"
# ===============================================================================================

destination d_hec {
    http(
         url("`SPLUNK_HEC_URL`")
         method("POST")
         log-fifo-size(`SCS_DEST_HEC_LOG_FIFO_SIZE`)
         workers(`SCS_DEST_HEC_WORKERS`)
         batch-lines(`SCS_DEST_HEC_BATCH_LINES`)
         batch-bytes(`SCS_DEST_HEC_BATCH_BYTES`)
         batch-timeout(`SCS_DEST_HEC_BATCH_TIMEOUT`)
         timeout(`SCS_DEST_HEC_CONNECTION_TIMEOUT`)
         user_agent("syslog-ng User Agent")
         user("syslog-ng")
         headers("`SCS_DEST_HEC_HEADERS`")
         password("`SPLUNK_HEC_TOKEN`")
         persist-name("splunk_hec")
         disk-buffer(mem-buf-length(`SCS_DEST_HEC_PERSIST_MEM_BUF_LENGTH`)
                     disk-buf-size(`SCS_DEST_HEC_PERSIST_DISK_BUF_SIZE`)
                     mem-buf-size(`SCS_DEST_HEC_PERSIST_MEM_BUF_SIZE`)
                     reliable(`SCS_DEST_HEC_PERSIST_RELIABLE`)
                     dir("/opt/syslog-ng/var/data/disk-buffer/"))
                     #qout-size(`SCS_DEST_HEC_PERSIST_QOUT_SIZE`)

         tls(peer-verify(no)
#            ca-dir("dir")
#            ca-file("ca")
#            cert-file("cert")
#            cipher-suite("cipher") 
#            key-file("key")
#            peer-verify(yes|no)
#            ssl-version(<the permitted SSL/TLS version>)
            )
         body('$(format-json
                 time=$S_UNIXTIME.$S_MSEC
                 host=${HOST}
                 source=${.splunk.source}
                 sourcetype=${.splunk.sourcetype}
                 index=${.splunk.index}
                 event=$(template ${fields.sc4s_template} $(template `splunk-default-template`))
                 fields.*)')
        );
    };

destination d_hecmetrics {
    http(
         url("`SPLUNK_HEC_URL`")
         workers(`SCS_DEST_HEC_WORKERS`)
         method("POST")
         batch-lines(1)
         batch-bytes(128Kb)
         batch-timeout(1)
         timeout(30)
         user_agent("syslog-ng User Agent")
         user("syslog-ng")
         password("`SPLUNK_HEC_TOKEN`")
         persist-name("splunk_metrics")
#         disk-buffer(mem-buf-length(30000)
#                     disk-buf-size(100000)
#                     reliable(no)
#                     dir("/opt/syslog-ng/var/data/disk-buffer/"))
         tls(peer-verify(no)
#            ca-dir("dir")
#            ca-file("ca")
#            cert-file("cert")
#            cipher-suite("cipher")
#            key-file("key")
#            peer-verify(yes|no)
#            ssl-version(<the permitted SSL/TLS version>)
            )
         body('$MESSAGE')
        );
    };
